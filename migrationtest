#!/bin/bash
#
#This script is designed to put the domains on a 
#server into a form that can be copy and pasted 
#into a hosts file so the customer can check their
# domains during a migration.
#
#This script is written to run on the target 
#server after an initial sync.
#
#Please report any bugs to jvandeventer@liquidweb.com

unalias ls 2> /dev/null

#set the IP variable for the server
ip=$(cat /var/cpanel/mainip)
#Yes/no function. Defaults to yes.
yesno () {
while true; do
        read -p "$*? [Y/n] " yn
        case $yn in
                yes|Yes|YES|y|Y|"")
                return 0  ;;
                no|No|n|N|NO)
                return 1  ;;
                *)
                echo "Please answer 'y' or 'n'."
        esac
done
}
#Set the domains that will be put into the form.
setdomains () {
if [[ -f /root/domainlist.txt ]]
	then
	echo -n "/root/domainlist.txt exists. Use this?"
		if yesno 
			then
			domains=$(cat /root/domainlist.txt)
		else
			echo "Creating hosts file entries for all domains. Now is the time to ctrl-c if you don't want to."
			sleep 2
			domains=$(cat /etc/trueuserdomains|cut -d ':' -f1|sort)
		fi
	else
	echo "Creating hosts file entries for all domains. Now is the time to ctrl-c if you don't want to."
	sleep 2
	domains=$(cat /etc/trueuserdomains|cut -d ':' -f1|sort)
fi 
}

#Set the users that the lwtest.html file will be added to.
setusers () {
if [[ -f /root/userlist.txt ]]
	then
	echo -n "/root/userlist.txt exists. Use this?"
		if yesno
			then
			users=$(cat /root/userlist.txt)
		else
			echo "Adding lwtest.html to all users. Last chance to jump ship."
			sleep 2
			users=$(\ls -A1 /var/cpanel/users | egrep -v '(system|root)')
		fi
	else
	echo "Adding lwtest.html all users. Last chance to jump ship."
	sleep 2
	users=$(\ls -A1 /var/cpanel/users | egrep -v '(system|root)')
fi
}			
				

cleanhosts () {
# If these files already exist, ask to remove them
if [[ -f /usr/local/apache/htdocs/hosts_file_entries.html ]]
	then
	echo -n "Hosts file list exists. Remove?"
		if yesno
			then
			rm -f /usr/local/apache/htdocs/hosts_file_entries.html
		else
			echo "I got no place to park my stuff, man."
			exit 0
		fi
	else
	echo "Hosts file entry list does not exist. Proceeding."
	sleep 1
fi
}

cleanhtml () {
# If these files already exist, ask to remove them
if [[ -f /usr/local/apache/htdocs/migration_test_urls.html ]]
	then
	echo -n "lwtest.html file list exists. Remove?"
		if yesno
			then
			rm -f /usr/local/apache/htdocs/migration_test_urls.html
		else
			echo "Then I got no place to park my stuff, man."
			exit 1
		fi
	else
	echo "Test html files do not exist. Proceeding."
	sleep 1
fi
}

makehosts () {
#create hosts files for the domains
for domain in $domains; do cat /etc/userdatadomains | grep $domain | sed -e 's/:/ /g' -e 's/==/ /g' | while read sdomain user owner type maindomain docroot dip port; do echo "<br>"$dip $sdomain "www."$sdomain >> /usr/local/apache/htdocs/hosts_file_entries.html; done; done
}


addhtml () {
#add lwtest.html pages for all the migrated domains
for each in $users; do echo "<html><body><h1>This is the new server</h1>" > /home/$each/public_html/lwtest.html;chown $each:$each /home/$each/public_html/lwtest.html;done
}

testdomains () {
testdomains=$(for each in $domains; do echo "$each" | sed 's/$/\/lwtest.html/g'; done)
}

printhtml () {
#write a list of the lwtest.html files to a publicly accessible list
for each in $testdomains; do echo "<a href="http://$each">http://$each</a>" >> /usr/local/apache/htdocs/migration_test_urls.html; echo "<br>" >> /usr/local/apache/htdocs/migration_test_urls.html; done
}

main () {
#run
setdomains
setusers
cleanhosts
cleanhtml
makehosts
addhtml
testdomains
printhtml
message
}

#Print the message that can be copy/pasted into the ticket.
message () {
cat <<-EOF


Hello,

I have finished the initial migration of your data. Now is the time to inspect your sites to make sure they are working correctly on the new server. The preferred method is to modify the hosts file on your home or office computer by entering the new ip for your domain(s).

I have created a page on your server of the lines you will need to enter into your hosts file. [Click here to see that page.](http://${ip}/hosts_file_entries.html) 

[Click here for a knowledge base article that explains how to edit your hosts file.](http://kb.liquidweb.com/dns-hosts-file)

Testing with this method it may be necessary to clear the cache in your browser.

The process of editing your hosts file is as simple as adding a few lines to a file through a text editor. This will tell your browser  IP address you want to load a domain from instead of looking it up from a DNS server. Here are a few youtube videos that will walk you through setting up your hosts file:

[For Windows 7 click here.](https://www.youtube.com/watch?v=DImy0En1-HI)

[For Windows 8 click here.](https://www.youtube.com/watch?v=6HtODhWg_YA)

[For Mac OSX click here.](https://www.youtube.com/watch?v=U4xXqSw3I58)

* Please note: If you are using OS X Mavericks you will need to use \`dscacheutil -flushcache; sudo killall -HUP mDNSResponder\` to flush your DNS.

If you require further assistance in setting up your hosts file our support team is available 24/7.

I have also created an html file on your domains to ensure you are resolving to the correct server. [Click here to view that page.](http://${ip}/migration_test_urls.html)

If you have correctly edited your hosts file you should see a message declaring you are reaching the new server.

Once testing is complete we can schedule a time to do the final sync.
EOF
}
main
